{"version":3,"sources":["components/Link.jsx","selectors/item.js","constants/actionTypes.js","actions/item.js","components/NameSearch.jsx","components/QualityFilter.jsx","constants/config.js","components/Price.jsx","components/Trend.jsx","components/Items.jsx","components/App.jsx","reducers/item.js","constants/api.js","sagas/item.js","sagas/index.js","store/index.js","serviceWorker.js","index.jsx"],"names":["ExternalLink","_ref","href","children","react_default","a","createElement","target","rel","getVisibleItems","property","min","max","items","nameSearch","qualityRangeStart","qualityRangeEnd","Object","values","filter","_len","arguments","length","filters","Array","_key","subject","every","all","query","searchQuery","toLowerCase","includes","propertySearchFilter","ITEMS_POLL_START","ITEMS_POLL_STOP","ITEMS_FETCH","ITEMS_FETCH_ERROR","ITEMS_SET","ITEMS_NAME_SEARCH","ITEMS_QUALITY_FILTER","doSetItems","type","doFetchItems","doFetchItemError","error","connect","state","value","dispatch","onChange","doNameSearch","input","placeholder","prefix","icon","style","color","suffix","onClick","e","stopPropagation","marksObject","marks","concat","toConsumableArray","reduce","acc","objectSpread","defineProperty","Fragment","_ref2","quality","qualityMin","qualityMax","rangeStart","rangeEnd","range","meta","debounce","time","apply","slider","assign","defaultValue","Info","styled","span","_templateObject","Price","tooltip","title","formatNumber","fractionDigits","symbols","grouping","humanFormat","decimals","separator","colors","up","down","stable","icons","Trend","trend","defaultProps","Column","Table","typeLabels","STANDARD","CONJURED","BACKSTAGE_PASS","LEGENDARY","typeColors","sellInFilters","Infinity","types","keys","Highlight","em","Items_templateObject","FilterContainer","div","_templateObject2","loading","fetchingItems","fetchedItemsOnce","emptyText","fetchItemsError","table","dataSource","locale","pagination","rowKey","components_NameSearch","key","dataIndex","render","text","main_default","searchWords","textToHighlight","highlightTag","autoEscape","sorter","b","name","localeCompare","align","sellIn","_ref3","sellInTrend","components_Price","components_Trend","marginLeft","map","_ref4","_ref5","slicedToArray","onFilter","_ref6","_value$split","split","_value$split2","_ref7","qualityTrend","progress","percent","format","width","filterDropdown","components_QualityFilter","indexOf","entries","_ref8","_ref9","_ref10","authorLink","Link_ExternalLink","employerLink","Layout","App_templateObject","containerStyles","rubbonStyles","Header","App_templateObject2","HeaderContent","_templateObject3","Content","_templateObject4","Footer","_templateObject5","App","components_Items","updatedItems","prevItems","nextItems","item","id","prevItem","nextItem","undefined","updatedItem","INITIAL_STATE","itemReducer","action","API_URL_ITEMS","process","handleFetchItems","handlePollItems","watchPollItemsStart","itemsSaga","fetchItems","_fetchItems","this","_callee","response","regenerator_default","wrap","_context5","prev","next","fetch","sent","abrupt","json","stop","_context","call","put","t0","_marked","ms","_context2","delay","_marked2","_context3","take","race","_marked3","_context4","takeEvery","_marked4","rootSaga","sagas_marked","createDebounceMiddleware","saga","createSagaMiddleware","store","createStore","applyMiddleware","run","Boolean","window","location","hostname","match","ReactDOM","es","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kOAWMA,EAAe,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAMC,EAATF,EAASE,SAAT,OACnBC,EAAAC,EAAAC,cAAA,KAAGJ,KAAMA,EAAMK,OAAO,SAASC,IAAI,gCAChCL,gDCiCL,SAASM,EAATR,GAKG,IA5B2BS,EAAUC,EAAKC,EAwB3CC,EAICZ,EAJDY,MACAC,EAGCb,EAHDa,WACAC,EAECd,EAFDc,kBACAC,EACCf,EADDe,gBAEA,OAAOC,OAAOC,OAAOL,GAAOM,OAlB9B,WAAyB,QAAAC,EAAAC,UAAAC,OAATC,EAAS,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAATF,EAASE,GAAAJ,UAAAI,GACvB,OAAO,SAAAC,GAAO,OAAIH,EAAQI,MAAM,SAAAR,GAAM,OAAIA,EAAOO,MAkB/CE,CA7CJ,SAA8BlB,EAAUmB,GACtC,IAAMC,EAAcD,EAAME,cAC1B,OAAO,SAAAL,GAAO,OAAIA,EAAQhB,GAAUqB,cAAcC,SAASF,IA4CvDG,CAAqB,OAAQnB,IA/BLJ,EAgCH,UAhCaC,EAgCFI,EAhCOH,EAgCYI,EA/BhD,SAAAU,GAAO,OAAIA,EAAQhB,IAAaC,GAAOe,EAAQhB,IAAaE,mBCxBxDsB,EAAmB,mBACnBC,EAAkB,kBAClBC,EAAc,cACdC,EAAoB,oBACpBC,EAAY,YACZC,EAAoB,oBACpBC,EAAuB,uBCkCvBC,EAAa,SAAA5B,GAAK,MAAK,CAClC6B,KAAMJ,EACNzB,UAQW8B,EAAe,iBAAO,CACjCD,KAAMN,IASKQ,EAAmB,SAAAC,GAAK,MAAK,CACxCH,KAAML,EACNQ,UCGaC,cAdS,SAAAC,GAAK,MAAK,CAChCC,MAAOD,EAAMjC,aASY,SAAAmC,GAAQ,MAAK,CACtCC,SAAU,SAAArB,GAAK,OAAIoB,EDSO,SAAApB,GAAK,MAAK,CACpCa,KAAMH,EACNV,SCX4BsB,CAAatB,OAG5BiB,CAnDW,SAAA7C,GAAA,IAAG+C,EAAH/C,EAAG+C,MAAOE,EAAVjD,EAAUiD,SAAV,OACxB9C,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CACEC,YAAY,OACZL,MAAOA,EACPM,OACElD,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CACEb,KAAK,SACLc,MAAO,CAAEC,MAAiB,KAAVT,EAAe,kBAAoB,aAGvDU,OACY,KAAVV,EAAe,KACb5C,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CACEb,KAAK,QACLc,MAAO,CAAEC,MAAO,mBAChBE,QAAS,kBAAMT,EAAS,OAI9BS,QACE,SAAAC,GAAC,OAAIA,EAAEC,mBAETX,SAAU,SAAAU,GAAC,OAAIV,EAASU,EAAErD,OAAOyC,6CCTrC,SAASc,EAAYnD,EAAKC,EAAKmD,GAC7B,MAAO,CAACpD,GAADqD,OAAA/C,OAAAgD,EAAA,EAAAhD,CAAS8C,GAAT,CAAgBnD,IAAKsD,OAC1B,SAACC,EAAKnB,GAAN,OAAA/B,OAAAmD,EAAA,EAAAnD,CAAA,GACKkD,EADLlD,OAAAoD,EAAA,EAAApD,CAAA,GAEG+B,EAAQA,IAAUrC,GAAOqC,IAAUpC,EAA3B,GAAAoD,OAAoChB,GAAU5C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiE,SAAA,SAEzD,IAiBG,IAmDQxB,cArBS,SAAAC,GAAK,MAAK,CAChCgB,MAAO9C,OAAOC,OAAO6B,EAAMlC,OAAOqD,OAChC,SAACC,EAADI,GAAA,IAAQC,EAARD,EAAQC,QAAR,OAAuBA,KAAWL,EAAMA,EAAjB,GAAAH,OAAA/C,OAAAgD,EAAA,EAAAhD,CAA2BkD,GAA3B,CAAgCK,KACvD,IAEF7D,IAAKoC,EAAM0B,WACX7D,IAAKmC,EAAM2B,WACXC,WAAY5B,EAAMhC,kBAClB6D,SAAU7B,EAAM/B,kBASS,SAAAiC,GAAQ,MAAK,CACtCC,SAAU,SAAA2B,GAAK,OAAI5B,EFfU,SAAC0B,EAAYC,GAAb,MAA2B,CACxDlC,KAAMF,EACNmC,aACAC,WACAE,KAAM,CACJC,SAAU,CACRC,KG5EsC,QDqFCC,WAAf,EAAAhE,OAAAgD,EAAA,EAAAhD,CAAmB4D,QAGlC/B,CAnDc,SAAA7C,GAAA,IAC3BU,EAD2BV,EAC3BU,IACAC,EAF2BX,EAE3BW,IACAmD,EAH2B9D,EAG3B8D,MACAY,EAJ2B1E,EAI3B0E,WACAC,EAL2B3E,EAK3B2E,SACA1B,EAN2BjD,EAM3BiD,SAN2B,OAQ3B9C,EAAAC,EAAAC,cAAC4E,EAAA,EAADjE,OAAAkE,OAAA,CACEN,OAAK,EACLO,aAAc,CAACT,EAAYC,GAC3Bb,MAAOD,EAAYnD,EAAKC,EAAKmD,IACzB,CAAEpD,MAAKC,MAAKsC,mLEvDpB,IAAMmC,EAAOC,IAAOC,KAAVC,KAiCKC,EArBD,SAAAxF,GAAe,IAAZ+C,EAAY/C,EAAZ+C,MACf,OAAIA,EAAQ,IACHA,EAIP5C,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CACEC,MAAOC,IAAa5C,EAAO,CACzB6C,eAAgB,EAChBC,QAAS,CAAEC,SAAU,QAGvB3F,EAAAC,EAAAC,cAAC+E,EAAD,KAAOW,IAAYhD,EAAO,CAAEiD,SAAU,EAAGC,UAAW,QC3BpDC,EAAS,CACbC,GAAI,UACJC,KAAM,UACNC,OAAQ,WAGJC,EAAQ,CACZH,GAAI,WACJC,KAAM,aACNC,OAAQ,SAWJE,EAAQ,SAAAvG,GAAsB,IAAnB+C,EAAmB/C,EAAnB+C,MAAOQ,EAAYvD,EAAZuD,MAChBiD,EAAkB,IAAVzD,EAAc,SAAWA,EAAQ,EAAI,OAAS,KAC5D,OACE5C,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAMb,KAAM6D,EAAME,GAAQjD,MAAKvC,OAAAmD,EAAA,EAAAnD,CAAA,GAAOuC,EAAP,CAAcC,MAAO0C,EAAOM,QAS/DD,EAAME,aAAe,CACnBlD,MAAO,MAGMgD,8UC5BPG,EAAWC,IAAXD,OAEFE,EAAa,CACjBC,SAAU,WACVC,SAAU,WACVC,eAAgB,iBAChBC,UAAW,aAGPC,EAAa,CACjBJ,SAAU,OACVC,SAAU,UACVC,eAAgB,UAChBC,UAAW,WAGPE,EAAgB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAAK,CAAC,GAAI,IAAK,CAAC,GAAKC,MAE1DC,GAAQpG,OAAOqG,KAAKJ,GAIpBK,GAAYjC,IAAOkC,GAAVC,KAMTC,GAAkBpC,IAAOqC,IAAVC,KAsJN9E,eAXS,SAAAC,GAAK,MAAK,CAChClC,MAAOJ,EAAgBsC,GACvB8E,QAAS9E,EAAM+E,gBAAkB/E,EAAMgF,iBACvCC,UAAWjF,EAAMkF,gBACb,qDACA,qBACJnH,WAAYiC,EAAMjC,WAClB2D,WAAY1B,EAAM0B,WAClBC,WAAY3B,EAAM2B,aAGL5B,CA7HD,SAAA7C,GAAA,IACZY,EADYZ,EACZY,MACAgH,EAFY5H,EAEZ4H,QACAG,EAHY/H,EAGZ+H,UACAlH,EAJYb,EAIZa,WACA2D,EALYxE,EAKZwE,WACAC,EANYzE,EAMZyE,WANY,OAQZtE,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CACEC,WAAYtH,EACZgH,QAASA,EACTO,OAAQ,CAAEJ,aACVK,YAAY,EACZC,OAAO,MAEPlI,EAAAC,EAAAC,cAACqG,EAAD,CACEhB,MAAOvF,EAAAC,EAAAC,cAACiI,EAAD,MACPC,IAAI,OACJC,UAAU,OACVC,OAAQ,SAAAC,GAAI,OACVvI,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,CACEwI,YAAa,CAAC/H,GACdgI,gBAAiBH,EACjBI,aAAc,SAAAxE,GAAA,IAAGpE,EAAHoE,EAAGpE,SAAH,OAAkBC,EAAAC,EAAAC,cAACiH,GAAD,KAAYpH,IAC5C6I,YAAU,KAGdC,OAAQ,SAAC5I,EAAG6I,GAAJ,OAAU7I,EAAE8I,KAAKC,cAAcF,EAAEC,SAE3C/I,EAAAC,EAAAC,cAACqG,EAAD,CACEhB,MAAM,QACN6C,IAAI,SACJC,UAAU,SACVY,MAAM,QACNX,OAAQ,SAACY,EAADC,GAAA,IAAWC,EAAXD,EAAWC,YAAX,OACNpJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiE,SAAA,KACElE,EAAAC,EAAAC,cAACmJ,EAAD,CAAOzG,MAAOsG,IACdlJ,EAAAC,EAAAC,cAACoJ,EAAD,CAAO1G,MAAOwG,EAAahG,MAAO,CAAEmG,WAAY,cAGpDV,OAAQ,SAAC5I,EAAG6I,GAAJ,OAAU7I,EAAEiJ,OAASJ,EAAEI,QAC/B/H,QAAS4F,EAAcyC,IAAI,SAAAC,GAAA,IAAAC,EAAA7I,OAAA8I,EAAA,EAAA9I,CAAA4I,EAAA,GAAElJ,EAAFmJ,EAAA,GAAOlJ,EAAPkJ,EAAA,SAAiB,CAC1C9G,MAAK,GAAAgB,OAAKrD,EAAL,KAAAqD,OAAYpD,GACjB+H,KAAM/H,IAAQ,IAAR,eAAAoD,OAAmCrD,GAAnC,GAAAqD,OAA8CrD,EAA9C,QAAAqD,OAAwDpD,MAEhEoJ,SAAU,SAAChH,EAADiH,GAAuB,IAAbX,EAAaW,EAAbX,OAAaY,EACZlH,EAAMmH,MAAM,KADAC,EAAAnJ,OAAA8I,EAAA,EAAA9I,CAAAiJ,EAAA,GACxBvJ,EADwByJ,EAAA,GACnBxJ,EADmBwJ,EAAA,GAE/B,OAAOd,GAAU3I,GAAO2I,GAAU1I,KAGtCR,EAAAC,EAAAC,cAACqG,EAAD,CACEhB,MAAM,UACN6C,IAAI,UACJC,UAAU,UACVY,MAAM,QACNX,OAAQ,SAAClE,EAAD6F,GAAA,IAAYC,EAAZD,EAAYC,aAAZ,OACNlK,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiE,SAAA,KACElE,EAAAC,EAAAC,cAACiK,EAAA,EAAD,CACE7H,KAAK,SACL8H,QAAU,KAAOhG,EAAUC,GAAeC,EAC1C+F,OAAQ,kBAAMjG,GACdkG,MA9FU,KAgGZtK,EAAAC,EAAAC,cAACoJ,EAAD,CAAO1G,MAAOsH,EAAc9G,MAAO,CAAEmG,WAAY,cAGrDV,OAAQ,SAAC5I,EAAG6I,GAAJ,OAAU7I,EAAEmE,QAAU0E,EAAE1E,SAChCmG,eAAgB,kBACdvK,EAAAC,EAAAC,cAACoH,GAAD,KACEtH,EAAAC,EAAAC,cAACsK,EAAD,UAINxK,EAAAC,EAAAC,cAACqG,EAAD,CACEhB,MAAM,OACN6C,IAAI,OACJC,UAAU,OACVY,MAAM,SACNX,OAAQ,SAAAhG,GAAI,OACVtC,EAAAC,EAAAC,cAAA,QAAMkD,MAAO,CAAEC,MAAOyD,EAAWxE,KAAUmE,EAAWnE,KAExDuG,OAAQ,SAAC5I,EAAG6I,GAAJ,OAAU7B,GAAMwD,QAAQxK,EAAEqC,MAAQ2E,GAAMwD,QAAQ3B,EAAExG,OAC1DnB,QAASN,OAAO6J,QAAQjE,GAAY+C,IAAI,SAAAmB,GAAA,IAAAC,EAAA/J,OAAA8I,EAAA,EAAA9I,CAAA8J,EAAA,SAAoB,CAC1D/H,MADsCgI,EAAA,GAEtCrC,KAFsCqC,EAAA,MAIxChB,SAAU,SAAChH,EAADiI,GAAA,OAAAA,EAAUvI,OAAoBM,wrBCjJ9C,IAAMkI,GACJ9K,EAAAC,EAAAC,cAAC6K,EAAD,CAAcjL,KAAK,+BAAnB,gBAGIkL,GACJhL,EAAAC,EAAAC,cAAC6K,EAAD,CAAcjL,KAAK,kCAAnB,qBAKImL,GAAS/F,IAAOqC,IAAV2D,MAMNC,GAAe,6DAUfC,GAAY,eAAAxH,OAFG,OAEH,sBAAAA,OAFG,OAEH,OAKZyH,GAASnG,IAAOqC,IAAV+D,KAPS,eAcfC,GAAgBrG,IAAOqC,IAAViE,KACfL,GACAC,GAlBiB,QAsBfK,GAAUvG,IAAOqC,IAAVmE,KACTP,GAvBiB,OAEA,QA4BfQ,GAASzG,IAAOqC,IAAVqE,KACRR,IAyBWS,GAhBH,kBACV7L,EAAAC,EAAAC,cAAC+K,GAAD,KACEjL,EAAAC,EAAAC,cAACmL,GAAD,KACErL,EAAAC,EAAAC,cAACqL,GAAD,KACEvL,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAMb,KAAK,SADb,sCAIFtC,EAAAC,EAAAC,cAACuL,GAAD,KACEzL,EAAAC,EAAAC,cAAC4L,GAAD,OAEF9L,EAAAC,EAAAC,cAACyL,GAAD,mBACcb,GADd,QAC+BE,GAD/B,uDCfJ,SAASe,GAAaC,EAAWC,GAC/B,OAAOA,EAAUnI,OACf,SAACrD,EAAOyL,GAAR,OAAArL,OAAAmD,EAAA,EAAAnD,CAACA,OAAAoD,EAAA,EAAApD,CAAA,GACEqL,EAAKC,GA5BZ,SAAqBC,EAAUC,GAC7B,IAAMnC,OACSoC,IAAbF,EACI,EACAC,EAASjI,QAAUgI,EAAShI,SAAWgI,EAASlC,aAChDd,OACSkD,IAAbF,EACI,EACAC,EAASnD,OAASkD,EAASlD,QAAUkD,EAAShD,YACpD,OAAOvI,OAAAmD,EAAA,EAAAnD,CAAA,GACFwL,EADL,CAEEnC,eACAd,gBAgBamD,CAAYP,EAAUE,EAAKC,IAAKD,IACxCzL,IAEL,IAIJ,IAAM+L,GAAgB,CACpB/L,MAAO,GACPiH,eAAe,EACfC,kBAAkB,EAClBE,gBAAiB,KACjBnH,WAAY,GACZ2D,WAAY,EACZC,WAAY,IACZ3D,kBAAmB,EACnBC,gBAAiB,KAiDJ6L,OAvCf,WAAoD,IAA/B9J,EAA+B1B,UAAAC,OAAA,QAAAoL,IAAArL,UAAA,GAAAA,UAAA,GAAvBuL,GAAeE,EAAQzL,UAAAC,OAAA,EAAAD,UAAA,QAAAqL,EAClD,OAAQI,EAAOpK,MACb,KAAKN,EACH,OAAOnB,OAAAmD,EAAA,EAAAnD,CAAA,GAAK8B,EAAZ,CAAmB+E,eAAe,IAEpC,KAAKzF,EAGH,OAAOpB,OAAAmD,EAAA,EAAAnD,CAAA,GACF8B,EADL,CAEE+E,eAAe,EACfC,kBAAkB,EAClBE,gBAAiB6E,EAAOjK,QAG5B,KAAKP,EACH,OAAOrB,OAAAmD,EAAA,EAAAnD,CAAA,GACF8B,EADL,CAEElC,MAAOsL,GAAapJ,EAAMlC,MAAOiM,EAAOjM,OACxCiH,eAAe,EACfC,kBAAkB,EAClBE,gBAAiB,OAGrB,KAAK1F,EACH,OAAOtB,OAAAmD,EAAA,EAAAnD,CAAA,GAAK8B,EAAZ,CAAmBjC,WAAYgM,EAAOjL,QAExC,KAAKW,EACH,OAAOvB,OAAAmD,EAAA,EAAAnD,CAAA,GACF8B,EADL,CAEEhC,kBAAmB+L,EAAOnI,WAC1B3D,gBAAiB8L,EAAOlI,WAG5B,QACE,OAAO7B,2CClHAgK,GAAa,GAAA/I,OAFLgJ,OAEK,wBCcTC,iBAiBAC,iBAgBPC,iBAYeC,IAzDlB,SAAeC,KAAtB,OAAAC,GAAArI,MAAAsI,KAAAlM,0DAAO,SAAAmM,IAAA,IAAAC,EAAA,OAAAC,GAAArN,EAAAsN,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACkBC,MAAMhB,IADxB,cACCU,EADDG,EAAAI,KAAAJ,EAAAK,OAAA,SAEER,EAASS,QAFX,wBAAAN,EAAAO,SAAAX,EAAAD,gCAYA,SAAUN,KAAV,IAAApM,EAAA,OAAA6M,GAAArN,EAAAsN,KAAA,SAAAS,GAAA,cAAAA,EAAAP,KAAAO,EAAAN,MAAA,OAEW,OAFXM,EAAAP,KAAA,EAAAO,EAAAN,KAAA,EAEiBO,aAAKhB,IAFtB,OAGH,OADMxM,EAFHuN,EAAAJ,KAAAI,EAAAN,KAAA,EAGGQ,aAAI7L,EAAW5B,IAHlB,OAAAuN,EAAAN,KAAA,gBAKH,OALGM,EAAAP,KAAA,EAAAO,EAAAG,GAAAH,EAAA,SAAAA,EAAAN,KAAA,GAKGQ,aAAI1L,EAAgBwL,EAAAG,KALvB,yBAAAH,EAAAD,SAAAK,GAAAjB,KAAA,SAiBA,SAAUL,GAAgBuB,GAA1B,OAAAf,GAAArN,EAAAsN,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,OAEH,OAFGY,EAAAZ,KAAA,EAEGQ,aAAI3L,KAFP,OAGH,OAHG+L,EAAAZ,KAAA,EAGGO,aAAKM,KAAOF,GAHf,OAAAC,EAAAZ,KAAA,gCAAAY,EAAAP,SAAAS,GAAArB,MAgBP,SAAUJ,KAAV,IAAAL,EAAA,OAAAY,GAAArN,EAAAsN,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,OAEmB,OAFnBe,EAAAf,KAAA,EAEyBgB,aAAK5M,GAF9B,OAGI,OADM4K,EAFV+B,EAAAb,KAAAa,EAAAf,KAAA,EAGUiB,aAAK,CAACV,aAAKnB,GAAiBJ,EAAO6B,OAAQG,aAAK3M,KAH1D,OAAA0M,EAAAf,KAAA,gCAAAe,EAAAV,SAAAa,GAAAzB,MAYe,SAAUH,KAAV,OAAAM,GAAArN,EAAAsN,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,OACb,OADamB,EAAAnB,KAAA,EACPlM,aAAI,CAACsN,aAAU9M,EAAa6K,IAAmBE,OADxC,wBAAA8B,EAAAd,SAAAgB,GAAA5B,uBChEU6B,IAAV,SAAUA,KAAV,OAAA1B,GAAArN,EAAAsN,KAAA,SAAAS,GAAA,cAAAA,EAAAP,KAAAO,EAAAN,MAAA,OACb,OADaM,EAAAN,KAAA,EACPlM,aAAI,CAACwL,OADE,wBAAAgB,EAAAD,SAAAkB,GAAA9B,MCAf,IAAMxI,GAAWuK,OACXC,GAAOC,eAEPC,GAAQC,aACZ7C,QACAH,EACAiD,KAAe1K,WAAf,EAAAhE,OAAAgD,EAAA,EAAAhD,CAGM,CAAC8D,GAAUwK,OAKnBA,GAAKK,IAAIR,IAGTK,GAAMxM,SZLoC,CACxCP,KAAMR,EACNyM,MGjB8B,MSsBjBc,UCfKI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,kECVNC,IAASxH,OACPtI,EAAAC,EAAAC,cAAC6P,EAAA,EAAD,CAAUV,MAAOA,IACfrP,EAAAC,EAAAC,cAAC8P,GAAD,OAEFC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c33c21a7.chunk.js","sourcesContent":["import React from 'react';\nimport { string, node } from 'prop-types';\n\n/**\n * Render a link to an external web page.\n *\n * @param {Object} props - React component properties.\n * @param {string} props.href - Href attribute.\n * @param {*} props.children - Child nodes.\n * @returns {React.Element} The rendered <a> element.\n */\nconst ExternalLink = ({ href, children }) => (\n  <a href={href} target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n    {children}\n  </a>\n);\n\nExternalLink.propTypes = {\n  href: string.isRequired,\n  children: node.isRequired,\n};\n\nexport { ExternalLink };\n","/**\n * Get a function that filters objects having a string property matching a given search query.\n *\n * @param {string} property - Property in the subject object.\n * @param {string} query - Text to search.\n * @returns {Function} - A function of the type: `(subject: Object) => boolean`, that returns `true`\n * if `subject[property]` contains `query`, or `false` otherwise.\n */\nfunction propertySearchFilter(property, query) {\n  const searchQuery = query.toLowerCase();\n  return subject => subject[property].toLowerCase().includes(searchQuery);\n}\n\n/**\n * Get a function that filters objects having a number property within a given min/max range.\n *\n * @param {string} property - Property in the subject object.\n * @param {number} min - Minimum value.\n * @param {number} max - Maximum value.\n * @returns {Function} - A function of the type: `(subject: Object) => boolean`, that returns\n * `false` if `subject[property]` is lower than `min` or higher than `max`. Otherwise returns\n * `true`.\n */\nfunction propertyMinMaxFilter(property, min, max) {\n  return subject => subject[property] >= min && subject[property] <= max;\n}\n\n/**\n * Get a function that combine filters.\n *\n * @param {Function} filters - Filter functions of the type: `(subject: Object) => boolean`.\n * @returns {Function} - A function of the type: `(subject: Object) => boolean`, that returns `true`\n * if ALL filters return `true`, `false` if ANY of the filters returns `false`.\n */\nfunction all(...filters) {\n  return subject => filters.every(filter => filter(subject));\n}\n\n/**\n * Return all visible items.\n *\n * Right now all items are visible, so we just return all of them.\n *\n * @param {Object} state - Redux state.\n * @returns {Item[]} All visible items.\n */\nfunction getVisibleItems({\n  items,\n  nameSearch,\n  qualityRangeStart,\n  qualityRangeEnd,\n}) {\n  return Object.values(items).filter(\n    all(\n      propertySearchFilter('name', nameSearch),\n      propertyMinMaxFilter('quality', qualityRangeStart, qualityRangeEnd),\n    ),\n  );\n}\n\nexport { getVisibleItems };\n","export const ITEMS_POLL_START = 'ITEMS_POLL_START';\nexport const ITEMS_POLL_STOP = 'ITEMS_POLL_STOP';\nexport const ITEMS_FETCH = 'ITEMS_FETCH';\nexport const ITEMS_FETCH_ERROR = 'ITEMS_FETCH_ERROR';\nexport const ITEMS_SET = 'ITEMS_SET';\nexport const ITEMS_NAME_SEARCH = 'ITEMS_NAME_SEARCH';\nexport const ITEMS_QUALITY_FILTER = 'ITEMS_QUALITY_FILTER';\n","import {\n  ITEMS_POLL_START,\n  ITEMS_POLL_STOP,\n  ITEMS_FETCH,\n  ITEMS_FETCH_ERROR,\n  ITEMS_SET,\n  ITEMS_NAME_SEARCH,\n  ITEMS_QUALITY_FILTER,\n} from '../constants/actionTypes';\nimport {\n  ITEMS_POLL_DELAY,\n  ITEMS_SLIDER_FILTER_DEBOUNCE,\n} from '../constants/config';\n\n/**\n * Create an action to start polling items every ITEMS_POLL_DELAY ms, until a ITEMS_POLL_STOP action\n * is triggered.\n *\n * @returns {Object} An action that consists in starting polling items.\n */\nexport const doStartPollingItems = () => ({\n  type: ITEMS_POLL_START,\n  delay: ITEMS_POLL_DELAY,\n});\n\n/**\n * Create an action to stop polling items.\n *\n * @returns {Object} An action that consists in stopping polling items.\n */\nexport const doStopPollingItems = () => ({\n  type: ITEMS_POLL_STOP,\n});\n\n/**\n * Create an action to add items.\n *\n * @param {Item[]} items - Items to add.\n * @returns {Object} An action that consists in adding the given items.\n */\nexport const doSetItems = items => ({\n  type: ITEMS_SET,\n  items,\n});\n\n/**\n * Create an action to fetch items.\n *\n * @returns {Object} An action that consists in fetching items.\n */\nexport const doFetchItems = () => ({\n  type: ITEMS_FETCH,\n});\n\n/**\n * Create an action to handle an items fetch error.\n *\n * @param {Error} error - Error thrown during fetch.\n * @returns {Object} An action that consists in hnadling items fetch error.\n */\nexport const doFetchItemError = error => ({\n  type: ITEMS_FETCH_ERROR,\n  error,\n});\n\n/**\n * Create an action to update name search filter.\n *\n * @param {string} query - The new name search query.\n * @returns {Object} An action that consists in updating the name filter.\n */\nexport const doNameSearch = query => ({\n  type: ITEMS_NAME_SEARCH,\n  query,\n});\n\n/**\n * Create an action to update the quality min/max filter.\n *\n * @param {number} rangeStart - Minimum quality to display.\n * @param {number} rangeEnd - Maximum quality to display.\n * @returns {Object} An action that consists in updating the quality filter.\n */\nexport const doQualityFilter = (rangeStart, rangeEnd) => ({\n  type: ITEMS_QUALITY_FILTER,\n  rangeStart,\n  rangeEnd,\n  meta: {\n    debounce: {\n      time: ITEMS_SLIDER_FILTER_DEBOUNCE,\n    },\n  },\n});\n","import React from 'react';\nimport { string, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Input, Icon } from 'antd';\nimport { doNameSearch } from '../actions/item';\n\n/**\n * Name search input.\n *\n * @param {Object} props - React component properties.\n * @param {string} props.value - Current search value.\n * @param {func} props.onChange - Function to call when.\n * @returns {React.Element} - Rendered React element.\n */\nexport const NameSearch = ({ value, onChange }) => (\n  <Input\n    placeholder=\"Name\"\n    value={value}\n    prefix={\n      <Icon\n        type=\"search\"\n        style={{ color: value === '' ? 'rgba(0,0,0,.25)' : '#1890ff' }}\n      />\n    }\n    suffix={\n      value === '' ? null : (\n        <Icon\n          type=\"close\"\n          style={{ color: 'rgba(0,0,0,.25)' }}\n          onClick={() => onChange('')}\n        />\n      )\n    }\n    onClick={\n      e => e.stopPropagation() /* prevent toggling name column order on click */\n    }\n    onChange={e => onChange(e.target.value)}\n  />\n);\n\nNameSearch.propTypes = {\n  value: string.isRequired,\n  onChange: func.isRequired,\n};\n\n/**\n * Map Redux state to <NameSearch> properties.\n *\n * @param {Item[]} state - Redux state.\n * @returns {Object} Properties for <NameSearch> component.\n */\nconst mapStateToProps = state => ({\n  value: state.nameSearch,\n});\n\n/**\n * Map Redux state to <NameSearch> properties.\n *\n * @param {Function} dispatch - Redux action dispatcher.\n * @returns {Object} Properties for <NameSearch> component.\n */\nconst mapDispatchToProps = dispatch => ({\n  onChange: query => dispatch(doNameSearch(query)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NameSearch);\n","import React from 'react';\nimport { number, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Slider } from 'antd';\nimport { doQualityFilter } from '../actions/item';\n\n/**\n * Create a `marks` object for Ant Design `<Slider>` component's `marks` property. Set a label for\n * `min` and `max` value, and set an empty React node for every other value.\n *\n * @example\n *\n * marksObject(0, 100, [10, 20, 30]);\n * // => {\n * //   0: '0',\n * //   10: <></>,\n * //   20: <></>,\n * //   30: <></>,\n * //   100: '100',\n * // }\n *\n * @param {number} min - Minimum value.\n * @param {number} max - Maximum value.\n * @param {number[]} marks - Un-labelled additional marks.\n * @returns {Object} An object compatible with `<Slider>` component's `marks` property.\n * @see Ant Design Slider API: https://ant.design/components/slider/\n */\nfunction marksObject(min, max, marks) {\n  return [min, ...marks, max].reduce(\n    (acc, value) => ({\n      ...acc,\n      [value]: value === min || value === max ? `${value}` : <></>, // Display label only for min & max\n    }),\n    {},\n  );\n}\n\n/**\n * Quality min/max filter slider.\n *\n * @param {Object} props - React component properties.\n * @param {number} props.min - Minimum slider value.\n * @param {number} props.max - Maximum slider value.\n * @param {number[]} props.marks - Informational marks to display.\n * @param {number} props.rangeStart - Selected range start value.\n * @param {number} props.rangeEnd - Selected range end value.\n * @param {func} props.onChange - Function of the type:\n * `(rangeStart: number, rangeEnd: number) => *`, called when range changes.\n * @returns {React.Element} - Rendered React element.\n */\nexport const QualityFilter = ({\n  min,\n  max,\n  marks,\n  rangeStart,\n  rangeEnd,\n  onChange,\n}) => (\n  <Slider\n    range\n    defaultValue={[rangeStart, rangeEnd]}\n    marks={marksObject(min, max, marks)}\n    {...{ min, max, onChange }}\n  />\n);\n\nQualityFilter.propTypes = {\n  min: number.isRequired,\n  max: number.isRequired,\n  rangeStart: number.isRequired,\n  rangeEnd: number.isRequired,\n  onChange: func.isRequired,\n};\n\n/**\n * Map Redux state to <QualityFilter> properties.\n *\n * @param {Item[]} state - Redux state.\n * @returns {Object} Properties for <QualityFilter> component.\n */\nconst mapStateToProps = state => ({\n  marks: Object.values(state.items).reduce(\n    (acc, { quality }) => (quality in acc ? acc : [...acc, quality]),\n    [],\n  ),\n  min: state.qualityMin,\n  max: state.qualityMax,\n  rangeStart: state.qualityRangeStart,\n  rangeEnd: state.qualityRangeEnd,\n});\n\n/**\n * Map Redux state to <QualityFilter> properties.\n *\n * @param {Function} dispatch - Redux action dispatcher.\n * @returns {Object} Properties for <QualityFilter> component.\n */\nconst mapDispatchToProps = dispatch => ({\n  onChange: range => dispatch(doQualityFilter(...range)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(QualityFilter);\n","/**\n * Delay in milliseconds between two items updates.\n *\n * @type {Number}\n */\nexport const ITEMS_POLL_DELAY = 5000;\n\n/**\n * Filter sliders debounce time in milliseconds. Debouncing prevents too many filtering actions to\n * occur while using the slider.\n *\n * @type {Number}\n */\nexport const ITEMS_SLIDER_FILTER_DEBOUNCE = 200;\n","import React from 'react';\nimport { number } from 'prop-types';\nimport { Tooltip } from 'antd';\nimport styled from 'styled-components';\nimport humanFormat from 'human-format';\nimport formatNumber from 'simple-format-number';\n\nconst Info = styled.span`\n  border-bottom: 1px dotted;\n  cursor: help;\n`;\n\n/**\n * Display a price and an indicator about its trend.\n *\n * @param {Object} props - React component properties.\n * @param {number} props.value - Price value.\n * @returns {React.Element} The rendered element.\n */\nconst Price = ({ value }) => {\n  if (value < 1000) {\n    return value;\n  }\n\n  return (\n    <Tooltip\n      title={formatNumber(value, {\n        fractionDigits: 0,\n        symbols: { grouping: ' ' },\n      })}\n    >\n      <Info>{humanFormat(value, { decimals: 1, separator: '' })}</Info>\n    </Tooltip>\n  );\n};\n\nPrice.propTypes = {\n  value: number.isRequired,\n};\n\nexport default Price;\n","import React from 'react';\nimport { number, object } from 'prop-types';\nimport { Icon } from 'antd';\n\nconst colors = {\n  up: '#52c41a',\n  down: '#f5222d',\n  stable: '#bfbfbf',\n};\n\nconst icons = {\n  up: 'caret-up',\n  down: 'caret-down',\n  stable: 'minus',\n};\n\n/**\n * Display a price and an indicator about its trend.\n *\n * @param {Object} props - React component properties.\n * @param {number} props.value - Trend value.\n * @param {Object} props.style - Additional style.\n * @returns {React.Element} The rendered element.\n */\nconst Trend = ({ value, style }) => {\n  const trend = value === 0 ? 'stable' : value < 0 ? 'down' : 'up';\n  return (\n    <Icon type={icons[trend]} style={{ ...style, color: colors[trend] }} />\n  );\n};\n\nTrend.propTypes = {\n  value: number.isRequired,\n  style: object,\n};\n\nTrend.defaultProps = {\n  style: null,\n};\n\nexport default Trend;\n","import React from 'react';\nimport { bool, string, number, arrayOf, shape } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Progress, Table } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport styled from 'styled-components';\nimport { getVisibleItems } from '../selectors/item';\nimport ConnectedNameSearch from './NameSearch';\nimport ConnectedQualityFilter from './QualityFilter';\nimport Price from './Price';\nimport Trend from './Trend';\n\nconst { Column } = Table;\n\nconst typeLabels = {\n  STANDARD: 'Standard',\n  CONJURED: 'Conjured',\n  BACKSTAGE_PASS: 'Backstage pass',\n  LEGENDARY: 'Legendary',\n};\n\nconst typeColors = {\n  STANDARD: '#000',\n  CONJURED: '#52c41a',\n  BACKSTAGE_PASS: '#1890ff',\n  LEGENDARY: '#ff7a45',\n};\n\nconst sellInFilters = [[0, 2], [2, 5], [5, 10], [10, 20], [20, +Infinity]];\n\nconst types = Object.keys(typeColors);\n\nconst progressWidth = 48;\n\nconst Highlight = styled.em`\n  font-style: normal;\n  background: #ffc069;\n`;\n\n// TODO Reuse Ant Design dropdown styles\nconst FilterContainer = styled.div`\n  width: 20rem;\n  padding: 0.5rem 1rem;\n  background: white;\n  border-radius: 2px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n`;\n\n/**\n * Render items in a table.\n *\n * TODO Add pagination to Redux store.\n * TODO Implement onChange as per https://ant.design/components/table/#components-table-demo-ajax .\n * TODO Move sorting logic to Redux store and selectors.\n * TODO Move sellIn filtering logic to Redux store and selectors.\n * TODO Move type filtering logic to Redux store and selectors.\n *\n * @param {Object} props - React component properties.\n * @property {Item[]} items - Items to render.\n * @property {boolean} loading - Whether items are being loaded.\n * @property {string} nameSearch - Name search query.\n * @property {number} qualityMin - Minimum quality (Default: `0`).\n * @property {number} qualityMax - Minimum quality (Default: `100`).\n * @returns {React.Element} The rendered element.\n */\nconst Items = ({\n  items,\n  loading,\n  emptyText,\n  nameSearch,\n  qualityMin,\n  qualityMax,\n}) => (\n  <Table\n    dataSource={items}\n    loading={loading}\n    locale={{ emptyText }}\n    pagination={false}\n    rowKey=\"id\"\n  >\n    <Column\n      title={<ConnectedNameSearch />}\n      key=\"name\"\n      dataIndex=\"name\"\n      render={text => (\n        <Highlighter\n          searchWords={[nameSearch]}\n          textToHighlight={text}\n          highlightTag={({ children }) => <Highlight>{children}</Highlight>}\n          autoEscape\n        />\n      )}\n      sorter={(a, b) => a.name.localeCompare(b.name)}\n    />\n    <Column\n      title=\"Price\"\n      key=\"sellIn\"\n      dataIndex=\"sellIn\"\n      align=\"right\"\n      render={(sellIn, { sellInTrend }) => (\n        <>\n          <Price value={sellIn} />\n          <Trend value={sellInTrend} style={{ marginLeft: '0.5rem' }} />\n        </>\n      )}\n      sorter={(a, b) => a.sellIn - b.sellIn}\n      filters={sellInFilters.map(([min, max]) => ({\n        value: `${min}:${max}`,\n        text: max === +Infinity ? `Higher than ${min}` : `${min} to ${max}`,\n      }))}\n      onFilter={(value, { sellIn }) => {\n        const [min, max] = value.split(':');\n        return sellIn >= min && sellIn <= max;\n      }}\n    />\n    <Column\n      title=\"Quality\"\n      key=\"quality\"\n      dataIndex=\"quality\"\n      align=\"right\"\n      render={(quality, { qualityTrend }) => (\n        <>\n          <Progress\n            type=\"circle\"\n            percent={(100 * (quality - qualityMin)) / qualityMax}\n            format={() => quality}\n            width={progressWidth}\n          />\n          <Trend value={qualityTrend} style={{ marginLeft: '0.5rem' }} />\n        </>\n      )}\n      sorter={(a, b) => a.quality - b.quality}\n      filterDropdown={() => (\n        <FilterContainer>\n          <ConnectedQualityFilter />\n        </FilterContainer>\n      )}\n    />\n    <Column\n      title=\"Type\"\n      key=\"type\"\n      dataIndex=\"type\"\n      align=\"center\"\n      render={type => (\n        <span style={{ color: typeColors[type] }}>{typeLabels[type]}</span>\n      )}\n      sorter={(a, b) => types.indexOf(a.type) - types.indexOf(b.type)}\n      filters={Object.entries(typeLabels).map(([value, text]) => ({\n        value,\n        text,\n      }))}\n      onFilter={(value, { type }) => type === value}\n    />\n  </Table>\n);\n\nItems.propTypes = {\n  items: arrayOf(\n    shape({\n      id: string.isRequired,\n      name: string.isRequired,\n      sellIn: number.isRequired,\n      quality: number.isRequired,\n      type: string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  loading: bool.isRequired,\n  emptyText: string.isRequired,\n  nameSearch: string.isRequired,\n  qualityMin: number.isRequired,\n  qualityMax: number.isRequired,\n};\n\n/**\n * Map Redux state to <Items> properties.\n *\n * @param {Item[]} state - Redux state.\n * @returns {Object} Properties for <Items> component.\n */\nconst mapStateToProps = state => ({\n  items: getVisibleItems(state),\n  loading: state.fetchingItems && !state.fetchedItemsOnce,\n  emptyText: state.fetchItemsError\n    ? 'An error occurred while retrieving the items list.'\n    : 'No items for sale.',\n  nameSearch: state.nameSearch,\n  qualityMin: state.qualityMin,\n  qualityMax: state.qualityMax,\n});\n\nexport default connect(mapStateToProps)(Items);\n","import React from 'react';\nimport { Icon } from 'antd';\nimport styled from 'styled-components';\nimport { ExternalLink } from './Link';\nimport Items from './Items';\n\nconst authorLink = (\n  <ExternalLink href=\"https://github.com/amercier\">Alex Mercier</ExternalLink>\n);\n\nconst employerLink = (\n  <ExternalLink href=\"https://brennus-analytics.com/\">\n    Brennus Analytics\n  </ExternalLink>\n);\n\nconst Layout = styled.div`\n  box-sizing: border-box;\n  background: #e9e9e9;\n  min-height: 100vh;\n`;\n\nconst containerStyles = `\n  width: 100%;\n  max-width: 60rem;\n  margin: 0 auto;\n`;\n\nconst innerSpacing = '4rem';\n\nconst rubbonHeight = '4rem';\n\nconst rubbonStyles = `\n  height: ${rubbonHeight};\n  line-height: ${rubbonHeight};\n`;\n\nconst Header = styled.div`\n  height: ${rubbonHeight};\n  line-height: ${rubbonHeight};\n  background: #001529;\n  color: #fff;\n`;\n\nconst HeaderContent = styled.div`\n  ${containerStyles}\n  ${rubbonStyles}\n  padding: 0 ${innerSpacing};\n`;\n\nconst Content = styled.div`\n  ${containerStyles}\n  padding: ${innerSpacing};\n  box-sizing: border-box;\n  min-height: calc(100vh - 2 * ${rubbonHeight});\n  background: #fff;\n`;\n\nconst Footer = styled.div`\n  ${rubbonStyles}\n  text-align: center;\n`;\n\n/**\n * Root application component.\n *\n * @returns {React.Element} The rendered element.\n */\nconst App = () => (\n  <Layout>\n    <Header>\n      <HeaderContent>\n        <Icon type=\"home\" /> Gilded Rose Inn - Administration\n      </HeaderContent>\n    </Header>\n    <Content>\n      <Items />\n    </Content>\n    <Footer>\n      Created by {authorLink} for {employerLink}.\n    </Footer>\n  </Layout>\n);\n\nexport default App;\n","import {\n  ITEMS_FETCH,\n  ITEMS_FETCH_ERROR,\n  ITEMS_SET,\n  ITEMS_NAME_SEARCH,\n  ITEMS_QUALITY_FILTER,\n} from '../constants/actionTypes';\n\n/**\n * @typedef Item\n *\n * Item.\n *\n * @type {Object}\n * @property {string} id - Item unique identifier.\n * @property {string} name - Item name.\n * @property {number} sellIn - Sell price.\n * @property {number} quality - Quality (between 0 and 100).\n * @property {string} type - Type of item: \"STANDARD\", \"CONJURED\", \"BACKSTAGE_PASS\" or \"LEGENDARY\".\n */\n\n/**\n * @typedef ChangingItem\n *\n * Item with trends over time.\n *\n * @typedef {Item}\n * @property {number} qualityTrend - Difference in quality during the last quality change.\n * @property {number} sellInTrend - Difference in sellIn during the last sellIn change.\n */\n\n/**\n * Update an item with new.\n *\n * @param {Item|undefined} prevItem - Previous item data, if any.\n * @param {Item} nextItem - New item data.\n * @returns {ChangingItem} A new item with trends properties.\n */\nfunction updatedItem(prevItem, nextItem) {\n  const qualityTrend =\n    prevItem === undefined\n      ? 0\n      : nextItem.quality - prevItem.quality || prevItem.qualityTrend; // preserve previous trend if 0\n  const sellInTrend =\n    prevItem === undefined\n      ? 0\n      : nextItem.sellIn - prevItem.sellIn || prevItem.sellInTrend; // preserve previous trend if 0\n  return {\n    ...nextItem,\n    qualityTrend,\n    sellInTrend,\n  };\n}\n\n/**\n * Update items based on previous state.\n *\n * TODO Move this logic to the API.\n *\n * @param {Item[]} prevItems - Previous items.\n * @param {Item[]} nextItems - New items.\n * @returns {Item[]} The new items.\n */\nfunction updatedItems(prevItems, nextItems) {\n  return nextItems.reduce(\n    (items, item) => ({\n      [item.id]: updatedItem(prevItems[item.id], item),\n      ...items,\n    }),\n    {},\n  );\n}\n\nconst INITIAL_STATE = {\n  items: [],\n  fetchingItems: false,\n  fetchedItemsOnce: false,\n  fetchItemsError: null,\n  nameSearch: '',\n  qualityMin: 0,\n  qualityMax: 100,\n  qualityRangeStart: 0,\n  qualityRangeEnd: 100,\n};\n\n/**\n * Item reducer.\n *\n * @param {Object} [state=INITIAL_STATE] - Previous state.\n * @param {string} action - Action type and data.\n * @returns {Object} Next state.\n */\nfunction itemReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case ITEMS_FETCH: {\n      return { ...state, fetchingItems: true };\n    }\n    case ITEMS_FETCH_ERROR: {\n      // TODO Display a notification when the error occur while items exist.\n      // TODO Detect whether Internet connection is lost (normal behavior) vs server error.\n      return {\n        ...state,\n        fetchingItems: false,\n        fetchedItemsOnce: true,\n        fetchItemsError: action.error,\n      };\n    }\n    case ITEMS_SET: {\n      return {\n        ...state,\n        items: updatedItems(state.items, action.items),\n        fetchingItems: false,\n        fetchedItemsOnce: true,\n        fetchItemsError: null,\n      };\n    }\n    case ITEMS_NAME_SEARCH: {\n      return { ...state, nameSearch: action.query };\n    }\n    case ITEMS_QUALITY_FILTER: {\n      return {\n        ...state,\n        qualityRangeStart: action.rangeStart,\n        qualityRangeEnd: action.rangeEnd,\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default itemReducer;\n","/**\n * Base API URL.\n *\n * Use `REACT_APP_API_URL` environment variable is defined, otherwise default to hardcoded value.\n * Note: variable must start with `REACT_APP_`. Read [Adding Custom Environment Variables] for more\n * information.\n *\n * [adding custom environment variables]: https://facebook.github.io/create-react-app/docs/adding-custom-environment-variables\n *\n * @type {string}\n */\nconst API_URL_BASE = process.env.REACT_APP_API_URL || 'http://localhost:8080';\n\nexport const API_URL_ITEMS = `${API_URL_BASE}/items/`;\n","import { delay } from 'redux-saga';\nimport { call, put, race, take, takeEvery, all } from 'redux-saga/effects';\nimport { doFetchItems, doSetItems, doFetchItemError } from '../actions/item';\nimport { API_URL_ITEMS } from '../constants/api';\nimport {\n  ITEMS_POLL_START,\n  ITEMS_POLL_STOP,\n  ITEMS_FETCH,\n} from '../constants/actionTypes';\n\n/**\n * Fetch items from the API.\n *\n * @returns {Promise<Item[]>} All items.\n */\nexport async function fetchItems() {\n  const response = await fetch(API_URL_ITEMS);\n  return response.json();\n}\n\n/**\n * Generate two effects:\n * 1. A call to fetchItems\n * 2. A new ITEMS_SET actions with the items returned by fetchItems.\n *\n * @returns {Generator} A generator that yields a call to fetchItems and a ITEMS_SET action.\n */\nexport function* handleFetchItems() {\n  try {\n    const items = yield call(fetchItems);\n    yield put(doSetItems(items));\n  } catch (error) {\n    yield put(doFetchItemError(error));\n  }\n}\n\n/**\n * Generate the following effects infinitely:\n * 1. A new ITEMS_FETCH action.\n * 2. A call to wait() with the given delay.\n *\n * @param {number} ms - Time to wait before next poll, in ms.\n * @returns {Generator} A generator that yields infinitely a ITEMS_SET action and a call to wait.\n */\nexport function* handlePollItems(ms) {\n  while (true) {\n    yield put(doFetchItems());\n    yield call(delay, ms);\n  }\n}\n\n/**\n * Generate the following effects infinitely:\n * 1. A wait for the ITEMS_POLL_START action.\n * 2. A race between a handlePollItems call and a wait for ITEMS_POLL_STOP. This means effects from\n *    handlePollItems will be treated infinitely, until a ITEMS_POLL_STOP action is received.\n *\n * @returns {Generator} A generator that yields infinitely a wait forITEMS_POLL_START action and the\n * polling race.\n */\nfunction* watchPollItemsStart() {\n  while (true) {\n    const action = yield take(ITEMS_POLL_START);\n    yield race([call(handlePollItems, action.delay), take(ITEMS_POLL_STOP)]);\n  }\n}\n\n/**\n * Create the items poll start/stop saga.\n *\n * @returns {Generator} The items poll start/stop saga.\n */\nexport default function* itemsSaga() {\n  yield all([takeEvery(ITEMS_FETCH, handleFetchItems), watchPollItemsStart()]);\n}\n","import { all } from 'redux-saga/effects';\nimport itemsSaga from './item';\n\n/**\n * Create the root saga.\n *\n * @returns {Generator} The root saga.\n */\nexport default function* rootSaga() {\n  yield all([itemsSaga()]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport createDebounceMiddleware from 'redux-debounced';\nimport { createLogger } from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport itemReducer from '../reducers/item';\nimport { doStartPollingItems } from '../actions/item';\nimport rootSaga from '../sagas';\n\nconst debounce = createDebounceMiddleware();\nconst saga = createSagaMiddleware();\n\nconst store = createStore(\n  itemReducer,\n  undefined, // preloadedState - we don't need an initial state as we will run the root saga immediately\n  applyMiddleware(\n    ...(process.env.NODE_ENV === 'development'\n      ? [debounce, createLogger(), saga]\n      : [debounce, saga]),\n  ),\n);\n\n// Run the root saga (ie: start listening for actions)\nsaga.run(rootSaga);\n\n// Start items polling\nstore.dispatch(doStartPollingItems());\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}