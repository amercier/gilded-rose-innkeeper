{"version":3,"sources":["components/Link.jsx","components/Items.jsx","components/App.jsx","serviceWorker.js","index.jsx"],"names":["ExternalLink","_ref","href","children","react_default","a","createElement","target","rel","Column","Table","typeLabels","STANDARD","CONJURED","BACKSTAGE_PASS","LEGENDARY","typeColors","Info","styled","span","_templateObject","Items","items","minQuality","maxQuality","table","dataSource","pagination","title","key","dataIndex","align","render","sellIn","_ref2","type","tooltip","formatNumber","fractionDigits","symbols","grouping","humanFormat","decimals","separator","quality","progress","percent","format","width","style","color","defaultProps","authorLink","Link_ExternalLink","employerLink","Layout","div","App_templateObject","containerStyles","rubbonStyles","concat","Header","_templateObject2","HeaderContent","_templateObject3","Content","_templateObject4","Footer","_templateObject5","App","icon","components_Items","Boolean","window","location","hostname","match","ReactDOM","components_App","id","name","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a24674ce.chunk.js","sourcesContent":["import React from 'react';\nimport { string, node } from 'prop-types';\n\n/**\n * Render a link to an external web page.\n *\n * @example\n * <Link href=\"https://reactjs.org/\">React</Link>\n * // Renders a <a> element\n *\n * @param {Object} props - React component properties.\n * @param {string} props.href - Href attribute.\n * @param {*} props.children - Child nodes.\n * @returns {React.Element} The rendered <a> element.\n */\nconst ExternalLink = ({ href, children }) => (\n  <a href={href} target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n    {children}\n  </a>\n);\n\nExternalLink.propTypes = {\n  href: string.isRequired,\n  children: node.isRequired,\n};\n\nexport { ExternalLink };\n","import React from 'react';\nimport { string, number, arrayOf, shape } from 'prop-types';\nimport { Progress, Table, Tooltip } from 'antd';\nimport styled from 'styled-components';\nimport humanFormat from 'human-format';\nimport formatNumber from 'simple-format-number';\n\nconst { Column } = Table;\n\nconst typeLabels = {\n  STANDARD: 'Standard',\n  CONJURED: 'Conjured',\n  BACKSTAGE_PASS: 'Backstage pass',\n  LEGENDARY: 'Legendary',\n};\n\nconst typeColors = {\n  STANDARD: '#000',\n  CONJURED: '#52c41a',\n  BACKSTAGE_PASS: '#1890ff',\n  LEGENDARY: '#ff7a45',\n};\n\nconst progressWidth = 48;\n\nconst Info = styled.span`\n  border-bottom: 1px dotted;\n  cursor: help;\n`;\n\n/**\n * Render items in a table.\n *\n * @example\n * <Items items={[]} />\n * // Renders an empty table\n *\n * @param {Object} props - React component properties.\n * @property {Item[]} items - Items to render.\n * @property {number} minQuality - Minimum quality (Default: `0`).\n * @property {number} maxQuality - Minimum quality (Default: `100`).\n * @returns {React.Element} The rendered element.\n */\nconst Items = ({ items, minQuality, maxQuality }) => (\n  <Table dataSource={items} pagination={false}>\n    <Column title=\"Name\" key=\"name\" dataIndex=\"name\" />\n    <Column\n      title=\"Sell in\"\n      key=\"sellIn\"\n      dataIndex=\"sellIn\"\n      align=\"right\"\n      render={(sellIn, { type }) =>\n        type === 'LEGENDARY' ? (\n          <Tooltip\n            title={formatNumber(sellIn, {\n              fractionDigits: 0,\n              symbols: { grouping: ' ' },\n            })}\n          >\n            <Info>{humanFormat(sellIn, { decimals: 1, separator: '' })}</Info>\n          </Tooltip>\n        ) : (\n          sellIn\n        )\n      }\n    />\n    <Column\n      title=\"Quality\"\n      key=\"quality\"\n      dataIndex=\"quality\"\n      align=\"right\"\n      render={quality => (\n        <Progress\n          type=\"circle\"\n          percent={(100 * (quality - minQuality)) / maxQuality}\n          format={() => quality}\n          width={progressWidth}\n        />\n      )}\n    />\n    <Column\n      title=\"Type\"\n      key=\"type\"\n      dataIndex=\"type\"\n      align=\"center\"\n      render={type => (\n        <span style={{ color: typeColors[type] }}>{typeLabels[type]}</span>\n      )}\n    />\n  </Table>\n);\n\nItems.propTypes = {\n  items: arrayOf(\n    shape({\n      id: string.isRequired,\n      name: string.isRequired,\n      sellIn: number.isRequired,\n      quality: number.isRequired,\n      type: string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  minQuality: number,\n  maxQuality: number,\n};\n\nItems.defaultProps = {\n  minQuality: 0,\n  maxQuality: 100,\n};\n\nexport default Items;\n","import React from 'react';\nimport { Icon } from 'antd';\nimport styled from 'styled-components';\nimport { ExternalLink } from './Link';\nimport Items from './Items';\n\nconst authorLink = (\n  <ExternalLink href=\"https://github.com/amercier\">Alex Mercier</ExternalLink>\n);\n\nconst employerLink = (\n  <ExternalLink href=\"https://brennus-analytics.com/\">\n    Brennus Analytics\n  </ExternalLink>\n);\n\nconst Layout = styled.div`\n  box-sizing: border-box;\n  background: #e9e9e9;\n  min-height: 100vh;\n`;\n\nconst containerStyles = `\n  width: 100%;\n  max-width: 60rem;\n  margin: 0 auto;\n`;\n\nconst innerSpacing = '4rem';\n\nconst rubbonHeight = '4rem';\n\nconst rubbonStyles = `\n  height: ${rubbonHeight};\n  line-height: ${rubbonHeight};\n`;\n\nconst Header = styled.div`\n  height: ${rubbonHeight};\n  line-height: ${rubbonHeight};\n  background: #001529;\n  color: #fff;\n`;\n\nconst HeaderContent = styled.div`\n  ${containerStyles}\n  ${rubbonStyles}\n  padding: 0 ${innerSpacing};\n`;\n\nconst Content = styled.div`\n  ${containerStyles}\n  padding: ${innerSpacing};\n  box-sizing: border-box;\n  min-height: calc(100vh - 2 * ${rubbonHeight});\n  background: #fff;\n`;\n\nconst Footer = styled.div`\n  ${rubbonStyles}\n  text-align: center;\n`;\n\n/**\n * Root application component.\n *\n * @example\n * <App items={[]} />\n * // Renders the app\n *\n * @param {Object} props - React component properties.\n * @param {Item[]} props.items - Items to render.\n * @returns {React.Element} The rendered element.\n */\nconst App = ({ items }) => (\n  <Layout>\n    <Header>\n      <HeaderContent>\n        <Icon type=\"home\" /> Gilded Rose Inn\n      </HeaderContent>\n    </Header>\n    <Content>\n      <Items items={items} />\n    </Content>\n    <Footer>\n      Created by {authorLink} for {employerLink}.\n    </Footer>\n  </Layout>\n);\n\nApp.propTypes = {\n  items: Items.propTypes.items.isRequired,\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\n\n/**\n * @typedef Item\n *\n * Item.\n *\n * @type {Object}\n * @property {string} id - Item unique identifier.\n * @property {string} name - Item name.\n * @property {number} sellIn - Sell price.\n * @property {number} quality - Quality (between 0 and 100).\n * @property {string} type - Type of item: \"STANDARD\", \"CONJURED\", \"BACKSTAGE_PASS\" or \"LEGENDARY\".\n */\n\nconst items = [\n  {\n    id: '1a08fbee-7d5c-4450-9636-0facebd3a6a2',\n    name: '+5 Dexterity Vest',\n    sellIn: 10,\n    quality: 20,\n    type: 'STANDARD',\n  },\n  {\n    id: 'c4d98141-bd03-4ef1-9585-6ebdc0429ae2',\n    name: 'Aged Brie',\n    sellIn: 2,\n    quality: 0,\n    type: 'STANDARD',\n  },\n  {\n    id: '0cf3f50b-cea6-4b39-b6da-330eb973b07a',\n    name: 'Elixir of the Mongoose',\n    sellIn: 5,\n    quality: 7,\n    type: 'STANDARD',\n  },\n  {\n    id: 'a99b8527-6a28-4a53-98da-754788e78397',\n    name: 'Sulfuras, Hand of Ragnaros',\n    sellIn: 2147483647,\n    quality: 100,\n    type: 'LEGENDARY',\n  },\n  {\n    id: 'd61cd250-bde3-4355-8059-30768a2b7813',\n    name: 'Sulfuras, Hand of Ragnaros',\n    sellIn: 2147483647,\n    quality: 80,\n    type: 'LEGENDARY',\n  },\n  {\n    id: '03369719-af09-4c21-9f69-d07a288cb4d8',\n    name: 'Backstage passes to a TAFKAL80ETC concert',\n    sellIn: 15,\n    quality: 20,\n    type: 'BACKSTAGE_PASS',\n  },\n  {\n    id: '39419977-5469-43cf-907b-7ea4561c7a3b',\n    name: 'Backstage passes to a TAFKAL80ETC concert',\n    sellIn: 10,\n    quality: 49,\n    type: 'BACKSTAGE_PASS',\n  },\n  {\n    id: '22aa6f1e-0792-4987-a4d5-161a180ae54b',\n    name: 'Backstage passes to a TAFKAL80ETC concert',\n    sellIn: 5,\n    quality: 49,\n    type: 'BACKSTAGE_PASS',\n  },\n  {\n    id: '22b152b1-caac-4011-88de-b5180de0e452',\n    name: 'Conjured Mana Cake',\n    sellIn: 3,\n    quality: 6,\n    type: 'CONJURED',\n  },\n];\n\nReactDOM.render(<App items={items} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}