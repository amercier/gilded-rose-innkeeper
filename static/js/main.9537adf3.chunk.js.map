{"version":3,"sources":["components/Link.jsx","selectors/item.js","constants/actionTypes.js","actions/item.js","components/NameSearch.jsx","components/QualityFilter.jsx","components/Items.jsx","components/App.jsx","reducers/item.js","constants/api.js","sagas/item.js","sagas/index.js","store/index.js","serviceWorker.js","index.jsx"],"names":["ExternalLink","_ref","href","children","react_default","a","createElement","target","rel","getVisibleItems","property","min","max","items","nameSearch","qualityRangeStart","qualityRangeEnd","filter","_len","arguments","length","filters","Array","_key","subject","every","all","query","searchQuery","toLowerCase","includes","propertySearchFilter","ITEMS_FETCH","ITEMS_ADD","ITEMS_NAME_SEARCH","ITEMS_QUALITY_FILTER","doAddItems","type","connect","state","value","dispatch","onChange","doNameSearch","input","placeholder","prefix","icon","style","color","suffix","onClick","e","stopPropagation","marksObject","marks","concat","Object","toConsumableArray","reduce","acc","objectSpread","defineProperty","Fragment","_ref2","quality","qualityMin","qualityMax","rangeStart","rangeEnd","range","meta","debounce","time","apply","slider","assign","defaultValue","Column","Table","typeLabels","STANDARD","CONJURED","BACKSTAGE_PASS","LEGENDARY","typeColors","sellInFilters","Infinity","types","keys","Info","styled","span","_templateObject","Highlight","em","_templateObject2","FilterContainer","div","_templateObject3","loading","fetchingItems","table","dataSource","pagination","rowKey","title","components_NameSearch","key","dataIndex","render","text","main_default","searchWords","textToHighlight","highlightTag","autoEscape","sorter","b","name","localeCompare","align","sellIn","_ref3","tooltip","formatNumber","fractionDigits","symbols","grouping","humanFormat","decimals","separator","map","_ref4","_ref5","slicedToArray","onFilter","_ref6","_value$split","split","_value$split2","progress","percent","format","width","filterDropdown","components_QualityFilter","indexOf","entries","_ref7","_ref8","_ref9","authorLink","Link_ExternalLink","employerLink","Layout","App_templateObject","containerStyles","rubbonStyles","Header","App_templateObject2","HeaderContent","App_templateObject3","Content","_templateObject4","Footer","_templateObject5","App","components_Items","INITIAL_STATE","itemReducer","undefined","action","API_URL_ITEMS","process","handleFetchItems","fetchItems","_callee","response","regenerator_default","wrap","_context2","prev","next","fetch","sent","abrupt","json","stop","this","result","_context","call","put","_marked","watchItems","takeEvery","sagas_marked","createDebounceDebounceMiddleware","saga","createSagaMiddleware","store","createStore","applyMiddleware","run","rootSaga","Boolean","window","location","hostname","match","ReactDOM","es","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9537adf3.chunk.js","sourcesContent":["import React from 'react';\nimport { string, node } from 'prop-types';\n\n/**\n * Render a link to an external web page.\n *\n * @param {Object} props - React component properties.\n * @param {string} props.href - Href attribute.\n * @param {*} props.children - Child nodes.\n * @returns {React.Element} The rendered <a> element.\n */\nconst ExternalLink = ({ href, children }) => (\n  <a href={href} target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n    {children}\n  </a>\n);\n\nExternalLink.propTypes = {\n  href: string.isRequired,\n  children: node.isRequired,\n};\n\nexport { ExternalLink };\n","/**\n * Get a function that filters objects having a string property matching a given search query.\n *\n * @param {string} property - Property in the subject object.\n * @param {string} query - Text to search.\n * @returns {Function} - A function of the type: `(subject: Object) => boolean`, that returns `true`\n * if `subject[property]` contains `query`, or `false` otherwise.\n */\nfunction propertySearchFilter(property, query) {\n  const searchQuery = query.toLowerCase();\n  return subject => subject[property].toLowerCase().includes(searchQuery);\n}\n\n/**\n * Get a function that filters objects having a number property within a given min/max range.\n *\n * @param {string} property - Property in the subject object.\n * @param {number} min - Minimum value.\n * @param {number} max - Maximum value.\n * @returns {Function} - A function of the type: `(subject: Object) => boolean`, that returns\n * `false` if `subject[property]` is lower than `min` or higher than `max`. Otherwise returns\n * `true`.\n */\nfunction propertyMinMaxFilter(property, min, max) {\n  return subject => subject[property] >= min && subject[property] <= max;\n}\n\n/**\n * Get a function that combine filters.\n *\n * @param {Function} filters - Filter functions of the type: `(subject: Object) => boolean`.\n * @returns {Function} - A function of the type: `(subject: Object) => boolean`, that returns `true`\n * if ALL filters return `true`, `false` if ANY of the filters returns `false`.\n */\nfunction all(...filters) {\n  return subject => filters.every(filter => filter(subject));\n}\n\n/**\n * Return all visible items.\n *\n * Right now all items are visible, so we just return all of them.\n *\n * @param {Object} state - Redux state.\n * @returns {Item[]} All visible items.\n */\nfunction getVisibleItems({\n  items,\n  nameSearch,\n  qualityRangeStart,\n  qualityRangeEnd,\n}) {\n  return items.filter(\n    all(\n      propertySearchFilter('name', nameSearch),\n      propertyMinMaxFilter('quality', qualityRangeStart, qualityRangeEnd),\n    ),\n  );\n}\n\nexport { getVisibleItems };\n","export const ITEMS_FETCH = 'ITEMS_FETCH';\nexport const ITEMS_ADD = 'ITEMS_ADD';\nexport const ITEMS_NAME_SEARCH = 'ITEMS_NAME_SEARCH';\nexport const ITEMS_QUALITY_FILTER = 'ITEMS_QUALITY_FILTER';\n","import {\n  ITEMS_ADD,\n  ITEMS_FETCH,\n  ITEMS_NAME_SEARCH,\n  ITEMS_QUALITY_FILTER,\n} from '../constants/actionTypes';\n\n/**\n * Create an action to add items.\n *\n * @param {Item[]} items - Items to add.\n * @returns {Object} An action that consists in adding the given items.\n */\nexport const doAddItems = items => ({\n  type: ITEMS_ADD,\n  items,\n});\n\n/**\n * Create an action to fetch items.\n *\n * @returns {Object} An action that consists in fetching items.\n */\nexport const doFetchItems = () => ({\n  type: ITEMS_FETCH,\n});\n\n/**\n * Create an action to update name search filter.\n *\n * @param {string} query - The new name search query.\n * @returns {Object} An action that consists in updating the name filter.\n */\nexport const doNameSearch = query => ({\n  type: ITEMS_NAME_SEARCH,\n  query,\n});\n\n/**\n * Create an action to update the quality min/max filter.\n *\n * @param {number} rangeStart - Minimum quality to display.\n * @param {number} rangeEnd - Maximum quality to display.\n * @returns {Object} An action that consists in updating the quality filter.\n */\nexport const doQualityFilter = (rangeStart, rangeEnd) => ({\n  type: ITEMS_QUALITY_FILTER,\n  rangeStart,\n  rangeEnd,\n  meta: {\n    debounce: {\n      time: 200,\n    },\n  },\n});\n","import React from 'react';\nimport { string, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Input, Icon } from 'antd';\nimport { doNameSearch } from '../actions/item';\n\n/**\n * Name search input.\n *\n * @param {Object} props - React component properties.\n * @param {string} props.value - Current search value.\n * @param {func} props.onChange - Function to call when.\n * @returns {React.Element} - Rendered React element.\n */\nexport const NameSearch = ({ value, onChange }) => (\n  <Input\n    placeholder=\"Name\"\n    value={value}\n    prefix={\n      <Icon\n        type=\"search\"\n        style={{ color: value === '' ? 'rgba(0,0,0,.25)' : '#1890ff' }}\n      />\n    }\n    suffix={\n      value === '' ? null : (\n        <Icon\n          type=\"close\"\n          style={{ color: 'rgba(0,0,0,.25)' }}\n          onClick={() => onChange('')}\n        />\n      )\n    }\n    onClick={\n      e => e.stopPropagation() /* prevent toggling name column order on click */\n    }\n    onChange={e => onChange(e.target.value)}\n  />\n);\n\nNameSearch.propTypes = {\n  value: string.isRequired,\n  onChange: func.isRequired,\n};\n\n/**\n * Map Redux state to <NameSearch> properties.\n *\n * @param {Item[]} state - Redux state.\n * @returns {Object} Properties for <NameSearch> component.\n */\nconst mapStateToProps = state => ({\n  value: state.nameSearch,\n});\n\n/**\n * Map Redux state to <NameSearch> properties.\n *\n * @param {Function} dispatch - Redux action dispatcher.\n * @returns {Object} Properties for <NameSearch> component.\n */\nconst mapDispatchToProps = dispatch => ({\n  onChange: query => dispatch(doNameSearch(query)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NameSearch);\n","import React from 'react';\nimport { number, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Slider } from 'antd';\nimport { doQualityFilter } from '../actions/item';\n\n/**\n * Create a `marks` object for Ant Design `<Slider>` component's `marks` property. Set a label for\n * `min` and `max` value, and set an empty React node for every other value.\n *\n * @example\n *\n * marksObject(0, 100, [10, 20, 30]);\n * // => {\n * //   0: '0',\n * //   10: <></>,\n * //   20: <></>,\n * //   30: <></>,\n * //   100: '100',\n * // }\n *\n * @param {number} min - Minimum value.\n * @param {number} max - Maximum value.\n * @param {number[]} marks - Un-labelled additional marks.\n * @returns {Object} An object compatible with `<Slider>` component's `marks` property.\n * @see Ant Design Slider API: https://ant.design/components/slider/\n */\nfunction marksObject(min, max, marks) {\n  return [min, ...marks, max].reduce(\n    (acc, value) => ({\n      ...acc,\n      [value]: value === min || value === max ? `${value}` : <></>, // Display label only for min & max\n    }),\n    {},\n  );\n}\n\n/**\n * Quality min/max filter slider.\n *\n * @param {Object} props - React component properties.\n * @param {number} props.min - Minimum slider value.\n * @param {number} props.max - Maximum slider value.\n * @param {number[]} props.marks - Informational marks to display.\n * @param {number} props.rangeStart - Selected range start value.\n * @param {number} props.rangeEnd - Selected range end value.\n * @param {func} props.onChange - Function of the type:\n * `(rangeStart: number, rangeEnd: number) => *`, called when range changes.\n * @returns {React.Element} - Rendered React element.\n */\nexport const QualityFilter = ({\n  min,\n  max,\n  marks,\n  rangeStart,\n  rangeEnd,\n  onChange,\n}) => (\n  <Slider\n    range\n    defaultValue={[rangeStart, rangeEnd]}\n    marks={marksObject(min, max, marks)}\n    {...{ min, max, onChange }}\n  />\n);\n\nQualityFilter.propTypes = {\n  min: number.isRequired,\n  max: number.isRequired,\n  rangeStart: number.isRequired,\n  rangeEnd: number.isRequired,\n  onChange: func.isRequired,\n};\n\n/**\n * Map Redux state to <QualityFilter> properties.\n *\n * @param {Item[]} state - Redux state.\n * @returns {Object} Properties for <QualityFilter> component.\n */\nconst mapStateToProps = state => ({\n  marks: state.items.reduce(\n    (acc, { quality }) => (quality in acc ? acc : [...acc, quality]),\n    [],\n  ),\n  min: state.qualityMin,\n  max: state.qualityMax,\n  rangeStart: state.qualityRangeStart,\n  rangeEnd: state.qualityRangeEnd,\n});\n\n/**\n * Map Redux state to <QualityFilter> properties.\n *\n * @param {Function} dispatch - Redux action dispatcher.\n * @returns {Object} Properties for <QualityFilter> component.\n */\nconst mapDispatchToProps = dispatch => ({\n  onChange: range => dispatch(doQualityFilter(...range)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(QualityFilter);\n","import React from 'react';\nimport { bool, string, number, arrayOf, shape } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Progress, Table, Tooltip } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport styled from 'styled-components';\nimport humanFormat from 'human-format';\nimport formatNumber from 'simple-format-number';\nimport { getVisibleItems } from '../selectors/item';\nimport ConnectedNameSearch from './NameSearch';\nimport ConnectedQualityFilter from './QualityFilter';\n\nconst { Column } = Table;\n\nconst typeLabels = {\n  STANDARD: 'Standard',\n  CONJURED: 'Conjured',\n  BACKSTAGE_PASS: 'Backstage pass',\n  LEGENDARY: 'Legendary',\n};\n\nconst typeColors = {\n  STANDARD: '#000',\n  CONJURED: '#52c41a',\n  BACKSTAGE_PASS: '#1890ff',\n  LEGENDARY: '#ff7a45',\n};\n\nconst sellInFilters = [[0, 2], [2, 5], [5, 10], [10, 20], [20, +Infinity]];\n\nconst types = Object.keys(typeColors);\n\nconst progressWidth = 48;\n\nconst Info = styled.span`\n  border-bottom: 1px dotted;\n  cursor: help;\n`;\n\nconst Highlight = styled.em`\n  font-style: normal;\n  background: #ffc069;\n`;\n\n// TODO Reuse Ant Design dropdown styles\nconst FilterContainer = styled.div`\n  width: 20rem;\n  padding: 0.5rem 1rem;\n  background: white;\n  border-radius: 2px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n`;\n\n/**\n * Render items in a table.\n *\n * TODO Add loading state.\n * TODO Refactor price to a separate <Price> component.\n * TODO Add pagination to Redux store.\n * TODO Implement onChange as per https://ant.design/components/table/#components-table-demo-ajax .\n * TODO Move sorting logic to Redux store and selectors.\n * TODO Move sellIn filtering logic to Redux store and selectors.\n * TODO Move type filtering logic to Redux store and selectors.\n *\n * @param {Object} props - React component properties.\n * @property {Item[]} items - Items to render.\n * @property {boolean} loading - Whether items are being loaded.\n * @property {string} nameSearch - Name search query.\n * @property {number} qualityMin - Minimum quality (Default: `0`).\n * @property {number} qualityMax - Minimum quality (Default: `100`).\n * @returns {React.Element} The rendered element.\n */\nconst Items = ({ items, loading, nameSearch, qualityMin, qualityMax }) => (\n  <Table dataSource={items} loading={loading} pagination={false} rowKey=\"id\">\n    <Column\n      title={<ConnectedNameSearch />}\n      key=\"name\"\n      dataIndex=\"name\"\n      render={text => (\n        <Highlighter\n          searchWords={[nameSearch]}\n          textToHighlight={text}\n          highlightTag={({ children }) => <Highlight>{children}</Highlight>}\n          autoEscape\n        />\n      )}\n      sorter={(a, b) => a.name.localeCompare(b.name)}\n    />\n    <Column\n      title=\"Price\"\n      key=\"sellIn\"\n      dataIndex=\"sellIn\"\n      align=\"right\"\n      render={(sellIn, { type }) =>\n        type === 'LEGENDARY' ? (\n          <Tooltip\n            title={formatNumber(sellIn, {\n              fractionDigits: 0,\n              symbols: { grouping: ' ' },\n            })}\n          >\n            <Info>{humanFormat(sellIn, { decimals: 1, separator: '' })}</Info>\n          </Tooltip>\n        ) : (\n          sellIn\n        )\n      }\n      sorter={(a, b) => a.sellIn - b.sellIn}\n      filters={sellInFilters.map(([min, max]) => ({\n        value: `${min}:${max}`,\n        text: max === +Infinity ? `Higher than ${min}` : `${min} to ${max}`,\n      }))}\n      onFilter={(value, { sellIn }) => {\n        const [min, max] = value.split(':');\n        return sellIn >= min && sellIn <= max;\n      }}\n    />\n    <Column\n      title=\"Quality\"\n      key=\"quality\"\n      dataIndex=\"quality\"\n      align=\"right\"\n      render={quality => (\n        <Progress\n          type=\"circle\"\n          percent={(100 * (quality - qualityMin)) / qualityMax}\n          format={() => quality}\n          width={progressWidth}\n        />\n      )}\n      sorter={(a, b) => a.quality - b.quality}\n      filterDropdown={() => (\n        <FilterContainer>\n          <ConnectedQualityFilter />\n        </FilterContainer>\n      )}\n    />\n    <Column\n      title=\"Type\"\n      key=\"type\"\n      dataIndex=\"type\"\n      align=\"center\"\n      render={type => (\n        <span style={{ color: typeColors[type] }}>{typeLabels[type]}</span>\n      )}\n      sorter={(a, b) => types.indexOf(a.type) - types.indexOf(b.type)}\n      filters={Object.entries(typeLabels).map(([value, text]) => ({\n        value,\n        text,\n      }))}\n      onFilter={(value, { type }) => type === value}\n    />\n  </Table>\n);\n\nItems.propTypes = {\n  items: arrayOf(\n    shape({\n      id: string.isRequired,\n      name: string.isRequired,\n      sellIn: number.isRequired,\n      quality: number.isRequired,\n      type: string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  loading: bool.isRequired,\n  nameSearch: string.isRequired,\n  qualityMin: number.isRequired,\n  qualityMax: number.isRequired,\n};\n\n/**\n * Map Redux state to <Items> properties.\n *\n * @param {Item[]} state - Redux state.\n * @returns {Object} Properties for <Items> component.\n */\nconst mapStateToProps = state => ({\n  items: getVisibleItems(state),\n  loading: state.fetchingItems,\n  nameSearch: state.nameSearch,\n  qualityMin: state.qualityMin,\n  qualityMax: state.qualityMax,\n});\n\nexport default connect(mapStateToProps)(Items);\n","import React from 'react';\nimport { Icon } from 'antd';\nimport styled from 'styled-components';\nimport { ExternalLink } from './Link';\nimport Items from './Items';\n\nconst authorLink = (\n  <ExternalLink href=\"https://github.com/amercier\">Alex Mercier</ExternalLink>\n);\n\nconst employerLink = (\n  <ExternalLink href=\"https://brennus-analytics.com/\">\n    Brennus Analytics\n  </ExternalLink>\n);\n\nconst Layout = styled.div`\n  box-sizing: border-box;\n  background: #e9e9e9;\n  min-height: 100vh;\n`;\n\nconst containerStyles = `\n  width: 100%;\n  max-width: 60rem;\n  margin: 0 auto;\n`;\n\nconst innerSpacing = '4rem';\n\nconst rubbonHeight = '4rem';\n\nconst rubbonStyles = `\n  height: ${rubbonHeight};\n  line-height: ${rubbonHeight};\n`;\n\nconst Header = styled.div`\n  height: ${rubbonHeight};\n  line-height: ${rubbonHeight};\n  background: #001529;\n  color: #fff;\n`;\n\nconst HeaderContent = styled.div`\n  ${containerStyles}\n  ${rubbonStyles}\n  padding: 0 ${innerSpacing};\n`;\n\nconst Content = styled.div`\n  ${containerStyles}\n  padding: ${innerSpacing};\n  box-sizing: border-box;\n  min-height: calc(100vh - 2 * ${rubbonHeight});\n  background: #fff;\n`;\n\nconst Footer = styled.div`\n  ${rubbonStyles}\n  text-align: center;\n`;\n\n/**\n * Root application component.\n *\n * @returns {React.Element} The rendered element.\n */\nconst App = () => (\n  <Layout>\n    <Header>\n      <HeaderContent>\n        <Icon type=\"home\" /> Gilded Rose Inn - Administration\n      </HeaderContent>\n    </Header>\n    <Content>\n      <Items />\n    </Content>\n    <Footer>\n      Created by {authorLink} for {employerLink}.\n    </Footer>\n  </Layout>\n);\n\nexport default App;\n","import {\n  ITEMS_FETCH,\n  ITEMS_ADD,\n  ITEMS_NAME_SEARCH,\n  ITEMS_QUALITY_FILTER,\n} from '../constants/actionTypes';\n\n/**\n * @typedef Item\n *\n * Item.\n *\n * @type {Object}\n * @property {string} id - Item unique identifier.\n * @property {string} name - Item name.\n * @property {number} sellIn - Sell price.\n * @property {number} quality - Quality (between 0 and 100).\n * @property {string} type - Type of item: \"STANDARD\", \"CONJURED\", \"BACKSTAGE_PASS\" or \"LEGENDARY\".\n */\n\nconst INITIAL_STATE = {\n  items: [],\n  nameSearch: '',\n  qualityMin: 0,\n  qualityMax: 100,\n  qualityRangeStart: 0,\n  qualityRangeEnd: 100,\n};\n\n/**\n * Item reducer.\n *\n * @param {Object} [state=INITIAL_STATE] - Previous state.\n * @param {string} action - Action type and data.\n * @returns {Object} Next state.\n */\nfunction itemReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case ITEMS_FETCH: {\n      return { ...state, fetchingItems: true };\n    }\n    case ITEMS_ADD: {\n      return { ...state, items: action.items, fetchingItems: false };\n    }\n    case ITEMS_NAME_SEARCH: {\n      return { ...state, nameSearch: action.query };\n    }\n    case ITEMS_QUALITY_FILTER: {\n      return {\n        ...state,\n        qualityRangeStart: action.rangeStart,\n        qualityRangeEnd: action.rangeEnd,\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default itemReducer;\n","/**\n * Base API URL.\n *\n * Use `REACT_APP_API_URL` environment variable is defined, otherwise default to hardcoded value.\n * Note: variable must start with `REACT_APP_`. Read [Adding Custom Environment Variables] for more\n * information.\n *\n * [adding custom environment variables]: https://facebook.github.io/create-react-app/docs/adding-custom-environment-variables\n *\n * @type {string}\n */\nconst API_URL_BASE = process.env.REACT_APP_API_URL || 'http://localhost:8080';\n\nexport const API_URL_ITEMS = `${API_URL_BASE}/items/`;\n","import { call, put } from 'redux-saga/effects';\nimport { doAddItems } from '../actions/item';\nimport { API_URL_ITEMS } from '../constants/api';\n\n/**\n * Fetch items from the API.\n *\n * @returns {Promise<Item[]>} All items.\n */\nasync function fetchItems() {\n  const response = await fetch(API_URL_ITEMS);\n  return response.json();\n}\n\n/**\n * Handle fetch items request and generate a ITEMS_ADD action.\n *\n * @returns {Generator} A generator that yields a ITEMS_ADD action.\n */\nfunction* handleFetchItems() {\n  const result = yield call(fetchItems, {});\n  yield put(doAddItems(result));\n}\n\nexport { handleFetchItems };\n","import { takeEvery, all } from 'redux-saga/effects';\nimport { ITEMS_FETCH } from '../constants/actionTypes';\nimport { handleFetchItems } from './item';\n\n/**\n * Start `handleFetchItems` on every `ITEMS_FETCH` action.\n *\n * @returns {Generator} Generates one result from `handleFetchItems` for each `ITEMS_FETCH` action..\n */\nexport default function* watchItems() {\n  yield all([takeEvery(ITEMS_FETCH, handleFetchItems)]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport createDebounceDebounceMiddleware from 'redux-debounced';\nimport createSagaMiddleware from 'redux-saga';\nimport itemReducer from '../reducers/item';\nimport { doFetchItems } from '../actions/item';\nimport rootSaga from '../sagas';\n\nconst debounce = createDebounceDebounceMiddleware();\nconst saga = createSagaMiddleware();\n\nconst store = createStore(\n  itemReducer,\n  undefined, // preloadedState - we don't need an initial state as we will run the root saga immediately\n  applyMiddleware(debounce, saga),\n);\n\n// Start listening for actions\nsaga.run(rootSaga);\n\n// Trigger initial items fetch action\nstore.dispatch(doFetchItems());\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}