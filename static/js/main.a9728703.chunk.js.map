{"version":3,"sources":["components/Link.jsx","components/Items.jsx","components/App.jsx","constants/actionTypes.js","reducers/item.js","actions/item.js","constants/api.js","sagas/item.js","sagas/index.js","store/index.js","serviceWorker.js","index.jsx"],"names":["ExternalLink","_ref","href","children","react_default","a","createElement","target","rel","Column","Table","typeLabels","STANDARD","CONJURED","BACKSTAGE_PASS","LEGENDARY","typeColors","Info","styled","span","_templateObject","Items","items","minQuality","maxQuality","table","dataSource","pagination","rowKey","title","key","dataIndex","align","render","sellIn","_ref2","type","tooltip","formatNumber","fractionDigits","symbols","grouping","humanFormat","decimals","separator","quality","progress","percent","format","width","style","color","defaultProps","connect","state","authorLink","Link_ExternalLink","employerLink","Layout","div","App_templateObject","containerStyles","rubbonStyles","concat","Header","_templateObject2","HeaderContent","_templateObject3","Content","_templateObject4","Footer","_templateObject5","App","icon","components_Items","ITEMS_FETCH","ITEMS_ADD","INITIAL_STATE","itemReducer","arguments","length","undefined","action","doAddItems","API_URL_ITEMS","process","handleFetchItems","fetchItems","_callee","response","regenerator_default","wrap","_context2","prev","next","fetch","sent","abrupt","json","stop","this","result","_context","call","put","_marked","watchItems","all","takeEvery","sagas_marked","saga","createSagaMiddleware","store","createStore","applyMiddleware","run","rootSaga","dispatch","Boolean","window","location","hostname","match","ReactDOM","es","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a9728703.chunk.js","sourcesContent":["import React from 'react';\nimport { string, node } from 'prop-types';\n\n/**\n * Render a link to an external web page.\n *\n * @param {Object} props - React component properties.\n * @param {string} props.href - Href attribute.\n * @param {*} props.children - Child nodes.\n * @returns {React.Element} The rendered <a> element.\n */\nconst ExternalLink = ({ href, children }) => (\n  <a href={href} target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n    {children}\n  </a>\n);\n\nExternalLink.propTypes = {\n  href: string.isRequired,\n  children: node.isRequired,\n};\n\nexport { ExternalLink };\n","import React from 'react';\nimport { string, number, arrayOf, shape } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Progress, Table, Tooltip } from 'antd';\nimport styled from 'styled-components';\nimport humanFormat from 'human-format';\nimport formatNumber from 'simple-format-number';\n\nconst { Column } = Table;\n\nconst typeLabels = {\n  STANDARD: 'Standard',\n  CONJURED: 'Conjured',\n  BACKSTAGE_PASS: 'Backstage pass',\n  LEGENDARY: 'Legendary',\n};\n\nconst typeColors = {\n  STANDARD: '#000',\n  CONJURED: '#52c41a',\n  BACKSTAGE_PASS: '#1890ff',\n  LEGENDARY: '#ff7a45',\n};\n\nconst progressWidth = 48;\n\nconst Info = styled.span`\n  border-bottom: 1px dotted;\n  cursor: help;\n`;\n\n/**\n * Render items in a table.\n *\n * @param {Object} props - React component properties.\n * @property {Item[]} items - Items to render.\n * @property {number} minQuality - Minimum quality (Default: `0`).\n * @property {number} maxQuality - Minimum quality (Default: `100`).\n * @returns {React.Element} The rendered element.\n */\nconst Items = ({ items, minQuality, maxQuality }) => (\n  <Table dataSource={items} pagination={false} rowKey=\"id\">\n    <Column title=\"Name\" key=\"name\" dataIndex=\"name\" />\n    <Column\n      title=\"Sell in\"\n      key=\"sellIn\"\n      dataIndex=\"sellIn\"\n      align=\"right\"\n      render={(sellIn, { type }) =>\n        type === 'LEGENDARY' ? (\n          <Tooltip\n            title={formatNumber(sellIn, {\n              fractionDigits: 0,\n              symbols: { grouping: ' ' },\n            })}\n          >\n            <Info>{humanFormat(sellIn, { decimals: 1, separator: '' })}</Info>\n          </Tooltip>\n        ) : (\n          sellIn\n        )\n      }\n    />\n    <Column\n      title=\"Quality\"\n      key=\"quality\"\n      dataIndex=\"quality\"\n      align=\"right\"\n      render={quality => (\n        <Progress\n          type=\"circle\"\n          percent={(100 * (quality - minQuality)) / maxQuality}\n          format={() => quality}\n          width={progressWidth}\n        />\n      )}\n    />\n    <Column\n      title=\"Type\"\n      key=\"type\"\n      dataIndex=\"type\"\n      align=\"center\"\n      render={type => (\n        <span style={{ color: typeColors[type] }}>{typeLabels[type]}</span>\n      )}\n    />\n  </Table>\n);\n\nItems.propTypes = {\n  items: arrayOf(\n    shape({\n      id: string.isRequired,\n      name: string.isRequired,\n      sellIn: number.isRequired,\n      quality: number.isRequired,\n      type: string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  minQuality: number,\n  maxQuality: number,\n};\n\nItems.defaultProps = {\n  minQuality: 0,\n  maxQuality: 100,\n};\n\n/**\n * Map Redux state to <Items> properties.\n *\n * @param {Item[]} state - Redux state.\n * @returns {Object} Properties for <Items> component.\n */\nconst mapStateToProps = state => ({\n  items: state,\n});\n\nexport default connect(mapStateToProps)(Items);\n","import React from 'react';\nimport { Icon } from 'antd';\nimport styled from 'styled-components';\nimport { ExternalLink } from './Link';\nimport Items from './Items';\n\nconst authorLink = (\n  <ExternalLink href=\"https://github.com/amercier\">Alex Mercier</ExternalLink>\n);\n\nconst employerLink = (\n  <ExternalLink href=\"https://brennus-analytics.com/\">\n    Brennus Analytics\n  </ExternalLink>\n);\n\nconst Layout = styled.div`\n  box-sizing: border-box;\n  background: #e9e9e9;\n  min-height: 100vh;\n`;\n\nconst containerStyles = `\n  width: 100%;\n  max-width: 60rem;\n  margin: 0 auto;\n`;\n\nconst innerSpacing = '4rem';\n\nconst rubbonHeight = '4rem';\n\nconst rubbonStyles = `\n  height: ${rubbonHeight};\n  line-height: ${rubbonHeight};\n`;\n\nconst Header = styled.div`\n  height: ${rubbonHeight};\n  line-height: ${rubbonHeight};\n  background: #001529;\n  color: #fff;\n`;\n\nconst HeaderContent = styled.div`\n  ${containerStyles}\n  ${rubbonStyles}\n  padding: 0 ${innerSpacing};\n`;\n\nconst Content = styled.div`\n  ${containerStyles}\n  padding: ${innerSpacing};\n  box-sizing: border-box;\n  min-height: calc(100vh - 2 * ${rubbonHeight});\n  background: #fff;\n`;\n\nconst Footer = styled.div`\n  ${rubbonStyles}\n  text-align: center;\n`;\n\n/**\n * Root application component.\n *\n * @returns {React.Element} The rendered element.\n */\nconst App = () => (\n  <Layout>\n    <Header>\n      <HeaderContent>\n        <Icon type=\"home\" /> Gilded Rose Inn - Administration\n      </HeaderContent>\n    </Header>\n    <Content>\n      <Items />\n    </Content>\n    <Footer>\n      Created by {authorLink} for {employerLink}.\n    </Footer>\n  </Layout>\n);\n\nexport default App;\n","export const ITEMS_FETCH = 'ITEMS_FETCH';\nexport const ITEMS_ADD = 'ITEMS_ADD';\n","import { ITEMS_ADD } from '../constants/actionTypes';\n\n/**\n * @typedef Item\n *\n * Item.\n *\n * @type {Object}\n * @property {string} id - Item unique identifier.\n * @property {string} name - Item name.\n * @property {number} sellIn - Sell price.\n * @property {number} quality - Quality (between 0 and 100).\n * @property {string} type - Type of item: \"STANDARD\", \"CONJURED\", \"BACKSTAGE_PASS\" or \"LEGENDARY\".\n */\n\nconst INITIAL_STATE = [];\n\n/**\n * Item reducer.\n *\n * @param {Object} [state=INITIAL_STATE] - Previous state.\n * @param {string} action - Action key.\n * @returns {Object} Next state.\n */\nfunction itemReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case ITEMS_ADD: {\n      return action.items;\n    }\n    default:\n      return state;\n  }\n}\n\nexport default itemReducer;\n","import { ITEMS_ADD, ITEMS_FETCH } from '../constants/actionTypes';\n\n/**\n * Create an action to add items.\n *\n * @param {Item[]} items - Items to add.\n * @returns {Object} An action that consists in adding the given items.\n */\nexport const doAddItems = items => ({\n  type: ITEMS_ADD,\n  items,\n});\n\n/**\n * Create an action to fetch items.\n *\n * @returns {Object} An action that consists in fetching items.\n */\nexport const doFetchItems = () => ({\n  type: ITEMS_FETCH,\n});\n","/**\n * Base API URL.\n *\n * Use `REACT_APP_API_URL` environment variable is defined, otherwise default to hardcoded value.\n * Note: variable must start with `REACT_APP_`. Read [Adding Custom Environment Variables] for more\n * information.\n *\n * [adding custom environment variables]: https://facebook.github.io/create-react-app/docs/adding-custom-environment-variables\n *\n * @type {string}\n */\nconst API_URL_BASE = process.env.REACT_APP_API_URL || 'http://localhost:8080';\n\nexport const API_URL_ITEMS = `${API_URL_BASE}/items/`;\n","import { call, put } from 'redux-saga/effects';\nimport { doAddItems } from '../actions/item';\nimport { API_URL_ITEMS } from '../constants/api';\n\n/**\n * Fetch items from the API.\n *\n * @returns {Promise<Item[]>} All items.\n */\nasync function fetchItems() {\n  const response = await fetch(API_URL_ITEMS);\n  return response.json();\n}\n\n/**\n * Handle fetch items request and generate a ITEMS_ADD action.\n *\n * @returns {Generator} A generator that yields a ITEMS_ADD action.\n */\nfunction* handleFetchItems() {\n  const result = yield call(fetchItems, {});\n  yield put(doAddItems(result));\n}\n\nexport { handleFetchItems };\n","import { takeEvery, all } from 'redux-saga/effects';\nimport { ITEMS_FETCH } from '../constants/actionTypes';\nimport { handleFetchItems } from './item';\n\n/**\n * Start `handleFetchItems` on every `ITEMS_FETCH` action.\n *\n * @returns {Generator} Generates one result from `handleFetchItems` for each `ITEMS_FETCH` action..\n */\nexport default function* watchItems() {\n  yield all([takeEvery(ITEMS_FETCH, handleFetchItems)]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport itemReducer from '../reducers/item';\nimport { doFetchItems } from '../actions/item';\nimport rootSaga from '../sagas';\n\nconst saga = createSagaMiddleware();\n\nconst store = createStore(\n  itemReducer,\n  undefined, // preloadedState - we don't need an initial state as we will run the root saga immediately\n  applyMiddleware(saga),\n);\n\n// Start listening for actions\nsaga.run(rootSaga);\n\n// Trigger initial items fetch action\nstore.dispatch(doFetchItems());\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}